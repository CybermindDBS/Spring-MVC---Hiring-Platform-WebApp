Time Taken:
Planning: day 1
Spring data jpa: 2 days
Spring web mvc:
Frontend:

Covered:-

Spring Web MVC:

Data binding (one way & two way)
    -> @RequestParam
    -> @PathVariable
    -> @ModelAttribute

Data Rendering
    -> With Thymeleaf
    -> How:to - Data transfer from controller to view

Annotations:
    -> @Controller
    -> @RequestMapping
    -> @GetMapping
    -> @PostMapping

 Working with:
    -> HttpRequest, HttpResponse, HttpSession
    -> Cookies and @CookieValue
    -> Redirects in Spring MVC, RedirectAttributes, addAttribute(), addFlashAttribute()

Configurations (application.properties):
    -> setting context path using "server.servlet.context-path" property
    -> changing default dispatcher servlet mapping using "spring.mvc.servlet.path" property
    -> View resolver configurations (For both Thymeleaf & Jsp(in comments only, since jsp is not used in this project))

Interceptors (pre & post request processing) (for checking whether session is expired, if yes then the user is redirected to login page)
@ControllerAdvice and @ExceptionHandler


Not covered:
Spring MVC Tag Library (not covered since we are using Thymeleaf for our project.)


Spring Data Jpa:
Covered:-
1. Inheritance Mapping
2. Association Mapping (One to One, One to Many, Many to One)
3. Collection Mapping



